version: '3'
services:
  jenkins:
    build: .  # 커스텀 Dockerfile 사용
    environment:
      - JENKINS_OPTS="--prefix=/jenkins"
      - JENKINS_ARGS="--prefix=/jenkins"
    expose:
      - "8080"
    volumes:
      # :z 옵션: SELinux 환경에서 볼륨 공유 문제 해결 (비 SELinux 시스템에서는 무시됨)
      - ~/jenkins_home:/var/jenkins_home:z
      - ~/jenkins_home/jenkins.war:/usr/share/jenkins/jenkins.war:z
      - /var/run/docker.sock:/var/run/docker.sock
    group_add:
      - ${DOCKER_GROUP_ID:-$(getent group docker | cut -d: -f3)}

  mysql:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: 
      MYSQL_DATABASE: ssam
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3306:3306"

  spring-app:
    build: 
      context: ./BACK/Ssam
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - mysql
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/ssam?useSSL=false&useUnicode=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=
      - SERVER_SERVLET_CONTEXT_PATH=/api

  react-app:
    build:
      context: ./FE/Frontend
      dockerfile: Dockerfile
    volumes:
      - react-build:/usr/share/nginx/html

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - react-build:/usr/share/nginx/html
    depends_on:
      - jenkins
      - spring-app
      - react-app

volumes:
  jenkins_home:
  mysql_data:
  react-build:

